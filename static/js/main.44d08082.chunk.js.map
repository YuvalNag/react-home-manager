{"version":3,"sources":["assets/images sync /^/.*$","assets/images/bakery.jpg","assets/images/dairy.jpg","assets/images/drinks.jpg","assets/images/fish.jpg","assets/images/fruits_vegetables.jpg","assets/images/meat.jpg","assets/images/no-image-available.png","components/AddToCartButton/AddToCartButton.js","components/ProductSelector/ProductSelector.js","components/CategoriesCards/CategoryCard/CategoryCard.js","components/CategoriesCards/CategoriesCards.js","components/SummeryBar/SummeryBar.js","containers/ShoppingCartManager/ShoppingCartManager.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","addToCartButton","props","Button","className","productSelector","Form","Row","Col","Group","as","xs","variant","Control","type","placeholder","sm","categoryCard","imageName","image","require","Card","style","backgroundColor","color","Img","src","alt","ImgOverlay","Title","marginTop","fontSize","fontWeight","title","toUpperCase","Text","description","categoriesCards","categories","category","CategoryCard","key","summeryBar","ShoppingCartManager","state","categoriesInfo","Container","ProductSelector","AddToCartButton","this","CategoriesCards","Spinner","animation","SummeryBar","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44d08082.chunk.js","sourcesContent":["var map = {\n\t\"./bakery.jpg\": 39,\n\t\"./dairy.jpg\": 40,\n\t\"./drinks.jpg\": 41,\n\t\"./fish.jpg\": 42,\n\t\"./fruits_vegetables.jpg\": 43,\n\t\"./meat.jpg\": 44,\n\t\"./no-image-available.png\": 45\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 38;","module.exports = __webpack_public_path__ + \"static/media/bakery.72bf702c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dairy.9e2e16c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drinks.72bdaaa0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fish.ad2d7c5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fruits_vegetables.0b2a4c35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meat.33a127a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no-image-available.cd07bd0a.png\";","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FaOpencart } from \"react-icons/fa\";\r\n\r\nconst addToCartButton = props => (\r\n\r\n    <Button className='mt-5 mt-sm-1'><FaOpencart/> Add To Cart</Button>\r\n\r\n)\r\n\r\nexport default addToCartButton","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FiMapPin } from \"react-icons/fi\";\r\n\r\n\r\nconst productSelector = props => (\r\n    <Form>\r\n        <Form.Row>\r\n            <Col className='m-1 p-0' >\r\n                <Form.Group as={Row} className='m-0' >\r\n                    <Col xs=\"auto\"  className='p-0' >\r\n                        <Button variant=\"secondary\">\r\n                            <GoSearch />\r\n                        </Button>\r\n                    </Col>\r\n\r\n                    <Col  className='p-0' >\r\n                        <Form.Control type=\"text\" placeholder=\"Search\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col sm={2}  className='m-1'>\r\n              \r\n                        <Form.Control type=\"number\" placeholder=\"#Amount\" />\r\n                  \r\n            </Col>\r\n            <Col className='m-1 p-0' >\r\n                <Form.Group as={Row} className='m-0' >\r\n                    <Col xs=\"auto\" className='p-0'>\r\n                        <Button variant=\"secondary\">\r\n                            <FiMapPin />\r\n                        </Button>\r\n                    </Col>\r\n\r\n                    <Col    className='p-0'>\r\n                        <Form.Control type=\"text\" placeholder=\"Location\" />\r\n                    </Col>\r\n                </Form.Group>\r\n            </Col>\r\n        </Form.Row>\r\n    </Form>\r\n\r\n)\r\nexport default productSelector","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\n// import classes from './CategoryCard.module.css'\r\n\r\nconst categoryCard = props => {\r\n    let imageName = 'no-image-available.png'\r\n    if (props.imageName) {\r\n        imageName = props.imageName\r\n    }\r\n    const image = require(`../../../assets/images/${imageName}`);\r\n    return (\r\n        <Button variant=\"secondary\" className=\"w-50 \">\r\n            <Card className=\"img-thumbnail\" style={{\r\n        backgroundColor:'rgba(47,79,79 ,0.7)',\r\n         color: 'white'\r\n        }}  >\r\n                <Card.Img src={image} alt=\"Card image\" />\r\n                <Card.ImgOverlay >\r\n                    <Card.Title style={{\r\n                        marginTop: '30%',\r\n                        fontSize: '4vw',\r\n                        fontWeight: 'bold',\r\n                        backgroundColor: 'rgba(47,79,79 ,0.7)',\r\n                        color: 'white'\r\n                        /* ;mixBlendMode: 'difference'*/\r\n}}>{props.title.toUpperCase()}</Card.Title>\r\n                    <Card.Text>{props.description}</Card.Text>\r\n                </Card.ImgOverlay>\r\n            </Card>\r\n        </Button>\r\n\r\n    )\r\n}\r\nexport default categoryCard","import React from 'react'\r\nimport CategoryCard from './CategoryCard/CategoryCard'\r\n\r\n\r\nconst categoriesCards = props => {\r\n    const categoriesCards =props.categories.map(category=><CategoryCard key={category.title} title={category.title} imageName={category.imageName} description={category.description} />)\r\n    return (\r\n        <div>\r\n            {categoriesCards}\r\n        </div>\r\n    )\r\n}\r\nexport default categoriesCards","import React, { Fragment } from 'react'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst summeryBar = props => (\r\n    <Fragment>\r\n        <Col style={{ color: 'aliceblue' }}>\r\n            <div>lowest price</div>\r\n        </Col>\r\n        <Col style={{ color: 'aliceblue' }}>\r\n            <div>preferd supermarket</div>\r\n        </Col>\r\n        <Col style={{ color: 'aliceblue' }} >\r\n            <div>list of ubsents</div>\r\n        </Col>\r\n    </Fragment>\r\n)\r\n\r\nexport default summeryBar","import React, { Component } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport AddToCartButton from '../../components/AddToCartButton/AddToCartButton'\r\nimport ProductSelector from '../../components/ProductSelector/ProductSelector'\r\nimport CategoriesCards from '../../components/CategoriesCards/CategoriesCards'\r\nimport SummeryBar from '../../components/SummeryBar/SummeryBar'\r\n\r\n\r\nclass ShoppingCartManager extends Component {\r\n\r\n    state = {\r\n        categoriesInfo: [\r\n            { title: 'Bakery & Pastry', description: '', imageName: 'bakery.jpg' },\r\n            { title: 'Fruits & Vegetables', description: '', imageName: 'fruits_vegetables.jpg' },\r\n            { title: 'Dairy & Cheese', description: '', imageName: 'dairy.jpg' },\r\n            { title: 'Meat', description: '', imageName: 'meat.jpg' },\r\n            { title: 'Fish', description: '', imageName: 'fish.jpg' },\r\n            { title: 'Drinks & Spirits', description: '', imageName: 'drinks.jpg' }]\r\n    }\r\n    render() {\r\n        return (\r\n            <Container >\r\n                <Row xs=\"auto\" style={{ backgroundColor: 'currentColor' }} >\r\n                    <Col>\r\n                        <ProductSelector />\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <AddToCartButton  />\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row style={{ backgroundColor: 'lightgray' }} className=\"h-75 \">\r\n                    <Col >\r\n                        {this.state.categoriesInfo?<CategoriesCards categories={this.state.categoriesInfo} />:<Spinner  animation=\"border\"/>}\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Row style={{ backgroundColor: 'currentColor' }} className=\"h-25 \">\r\n                    <SummeryBar />\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShoppingCartManager\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport ShoppingCartManager from './containers/ShoppingCartManager/ShoppingCartManager' \nfunction App() {\n  return (\n    <div className=\"App\">\n      <ShoppingCartManager/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}